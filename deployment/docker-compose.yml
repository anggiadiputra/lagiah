version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lagiah_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: lagiah_db
      POSTGRES_USER: lagiah_user
      POSTGRES_PASSWORD: lagiah_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - lagiah_network

  # Redis (optional, for caching)
  redis:
    image: redis:7-alpine
    container_name: lagiah_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - lagiah_network

  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: lagiah_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://lagiah_user:lagiah_password@postgres:5432/lagiah_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - WHATSAPP_API_URL=${WHATSAPP_API_URL}
      - WHATSAPP_API_KEY=${WHATSAPP_API_KEY}
    ports:
      - "3004:3004"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - lagiah_network

  # Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: lagiah_frontend
    restart: unless-stopped
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
      - VITE_APP_NAME=${VITE_APP_NAME}
      - VITE_APP_VERSION=${VITE_APP_VERSION}
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - lagiah_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lagiah_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - lagiah_network

volumes:
  postgres_data:
  redis_data:

networks:
  lagiah_network:
    driver: bridge 