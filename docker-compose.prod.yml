version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: lagiah-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backups:/backups
    ports:
      - "3306:3306"
    networks:
      - lagiah-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: lagiah-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - lagiah-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lagiah-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - REDIS_URL=${REDIS_URL}
      - WHOIS_API_URL=${WHOIS_API_URL}
      - WHOIS_API_KEY=${WHOIS_API_KEY}
      - WHATSAPP_API_URL=${WHATSAPP_API_URL}
      - WHATSAPP_API_KEY=${WHATSAPP_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - LOG_LEVEL=${LOG_LEVEL}
      - NODE_ENV=${NODE_ENV}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    ports:
      - "3004:3004"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lagiah-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/api/health"]
      timeout: 30s
      retries: 5
      start_period: 40s

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lagiah-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - lagiah-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      timeout: 30s
      retries: 5
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lagiah-nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ${SSL_CERT_PATH}:/etc/nginx/ssl/cert.pem:ro
      - ${SSL_KEY_PATH}:/etc/nginx/ssl/key.pem:ro
    depends_on:
      - frontend
      - backend
    networks:
      - lagiah-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      timeout: 30s
      retries: 5

  # Database Backup Service
  backup:
    image: mysql:8.0
    container_name: lagiah-backup
    restart: "no"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./backups:/backups
    networks:
      - lagiah-network
    command: >
      sh -c "
        mysqldump -h mysql -u root -p$$MYSQL_ROOT_PASSWORD ${MYSQL_DATABASE} > /backups/backup-$$(date +%Y%m%d-%H%M%S).sql &&
        echo 'Backup completed successfully'
      "

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  lagiah-network:
    driver: bridge 